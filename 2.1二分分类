假如有一张图片Picture(简写为P)作为输入

输入 = P

P中可能有猫，可能没有猫

想要识别输出P的标签，那么如果有猫，输出为1，否则输出为0（没有猫）.（有且仅有两种输出）
我们用y来表示输出的结果

输出 = y (值为0或1)

图片P在计算机中保存的方式为 3 个独立的矩阵分别为红蓝绿三个颜色通道
如果P的像素为 64x64 那么就会产生3个64x64的矩阵分别对应三个颜色通道的矩阵

我们需要把这些矩阵里的值全部放进一个特征向量 x 中

 输入的特征向量 = x

那么需要将红蓝绿三色矩阵中的值依次放入 x 中

例如 P(red)=|255 231  42 22|
	          |123  94  83  2|
	          |   ...   ...  |
	          |   ...   ...  |

   P(Green)=|255 134 202 22|
  	        |   ...   ...  |
  	        |   ...   ...  |

    P(Blue)=|255 134 93 22 |
 	          |   ...   ...  |
            |   ...   ...  |
	
      	|255|
      	|231|
       	| 42|红
      	| 22|
	      |123|
       	| 94|
       	| . |
       	| . |
	      | . |
那么x=	|255|
	      |134|绿
      	|202|
  	    | 22|
      	| . |
      	| . |
      	| . |
      	|255|
      	|134|
	      | 93|蓝
	      | 22|
	      | . |
       	| . |
	      | . |
因为 P 的像素为 64 x 64,所以特征向量 x 的总维度为

dimension(x) = 64 * 64 * 3 =12288

我们用n_x来表示 x 的维度,那么

n_x = dimension( x ) = 12288

有时为了简写，可以用 n 代替 n_x 表示输入的特征向量的维度

在二分分类问题（Binary Classification）中，目标是训练出一个分类器，它以图片的特征向量 x 作为输入，预测输出的结果标签 y (y的值可能为1或0)，在上面的例子中，也就是预测图中是否有猫（y=1有猫 y=0无猫）

Notation(符号)

（ x , y ）   表示一个单独的样本
     x        表示输入的特征向量,维度为n_x(可简写成n)
     y        表示输出，值为 0 或 1

m training example: 表示m个训练样本
(x^(1),y^(1)）表示样本一（第一个训练样本）
(x^(2),y^(2)）表示样本二（第二个训练样本）
     ...
     ...
     ...
(x^(m),y^(m)）表示样本 m (最后一个训练样本)

[(x^(1),y^(1)）,(x^(2),y^(2)）......(x^(m),y^(m)）] 这就构成了所有训练样本（整个训练集）

     m        表示训练样本的构成个数(或写成m_train)
     m_test   表示测试集的样本数

     X        由训练集中的输入x^(1),x^(2)...构成的矩阵

     |			                |
 X = |x^(1) x^(2)......x^(m)|
     |			                |
则矩阵 X 有 m 列 n_x 行
则  X 为 n_x * m 矩阵 python中 X.shape用来输出矩阵的维度即（n_x,m）

     Y        由输出标签y^(1),y^(2)...构成的矩阵

     |			                |
 Y = |y^(1) y^(2)......y^(m)|
     |			                |
则矩阵 Y 有 1 行 m 列
所以 Y.shape=(1,m)
